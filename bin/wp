#!/usr/bin/env bash
#
# Download an image from the Internet, and create copies of it with the
#  specified dimensions.

DIMENSIONS_REGEX="^([0-9]+)x([0-9]+)$"
SOURCE_FILES_DIR="$HOME/wallpaper_originals"
PROCESSED_FILES_DIR="$HOME/wallpaper_edited"

usage() {
    echo >&2 "Usage: $0 <dimensions> <url>"
}

if [ $# -ne 2 ]; then
    usage
    exit 1
fi

if [[ ! $1 =~ $DIMENSIONS_REGEX ]]; then
    echo >&2 "Dimensions are not valid"
    usage
    exit 2
fi

d_x_dim=${BASH_REMATCH[1]}
d_y_dim=${BASH_REMATCH[2]}

mkdir -p $SOURCE_FILES_DIR
mkdir -p $PROCESSED_FILES_DIR

# Check to see if this source file has already been downloaded
output_filename=$(basename $2)
output_extension="${output_filename##*.}"
output_filename_next="${output_filename%.*}"
output_path="$SOURCE_FILES_DIR/$output_filename"
if [ ! -f "$output_path" ]; then
    curl -sSL $2 -o $output_path
fi

# Check the dimensions on the downloaded file, and depending on its dimensions,
#   choose what different slices of the image to take.
x_dim=$(sips -g pixelWidth $output_path | tail -1 | awk '{print $2}')
y_dim=$(sips -g pixelHeight $output_path | tail -1 | awk '{print $2}')

if [ $d_x_dim -gt $x_dim ]; then
    echo "Input image is not wide enough to create quality output images"
    exit 3
fi

if [ $d_y_dim -gt $y_dim ]; then
    echo "Input image is not tall enough to create quality output images"
    exit 4
fi

# Check the ratios of the image's dimensions to the intended ratio.
#   If the image has a wider aspect ratio, take horizontal aligned cuts
#   If the image has a taller aspect ratio, take vertically aligned cuts.
d_ar=$(echo "$d_x_dim / $d_y_dim" | bc -l)
ar=$(echo "$x_dim / $y_dim" | bc -l)

if (( $(echo "$d_ar < $ar" | bc -l) )); then
    gravities=("East" "West" "Center")
else
    gravities=("North" "South" "Center")
fi

for gravity in ${gravities[@]}; do
    processed_path="$PROCESSED_FILES_DIR/${output_filename_next}_Scaled_${gravity}_$1.$output_extension"
    if [ -f $processed_path ]; then
        continue
    fi
    convert $output_path -gravity $gravity -scale $1^ -extent $1 $processed_path
done

# Create unscaled images
for gravity in "North" "NorthEast" "NorthWest" "South" "SouthEast" "SouthWest" "East" "West" "Center"; do
    processed_path="$PROCESSED_FILES_DIR/${output_filename_next}_${gravity}_$1.$output_extension"
    if [ -f $processed_path ]; then
        continue
    fi
    convert $output_path -gravity $gravity -extent $1 $processed_path
done
